{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport class DateAdminComponent {\n  constructor() {\n    this.fechaActual = new Date();\n    this.fechaActualización = new Date('2023-11-18T23:59:59'); //esta fecha se va a obtener desde la bd\n    this.tiempoRestanteAct = {};\n    this.dateText = '';\n    this.calcularDiasRestantes();\n    this;\n  }\n  calcularDiasRestantes() {\n    const fechaActual = new Date();\n    const tiempoRestante = this.fechaActualización.getTime() - fechaActual.getTime();\n    this.tiempoRestanteAct.dias = Math.floor(tiempoRestante / (1000 * 60 * 60 * 24));\n    this.tiempoRestanteAct.horas = Math.floor(tiempoRestante % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    this.tiempoRestanteAct.minutos = Math.floor(tiempoRestante % (1000 * 60 * 60) / (1000 * 60));\n    if (this.tiempoRestanteAct.dias < 0) {\n      this.dateText += 'La fecha de actualización ha vencido';\n    } else {\n      this.dateText += 'Faltan: ' + this.tiempoRestanteAct.dias + 'días,' + this.tiempoRestanteAct.horas + ' horas y ' + this.tiempoRestanteAct.minutos + ' minutos para que el periodo de actualización finalice';\n    }\n  }\n  static #_ = this.ɵfac = function DateAdminComponent_Factory(t) {\n    return new (t || DateAdminComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DateAdminComponent,\n    selectors: [[\"app-date-admin\"]],\n    decls: 12,\n    vars: 5,\n    consts: [[1, \"fondo\"], [1, \"container\", \"cont-date\", \"rounded\", \"shadow-sm\"], [1, \"row\"], [1, \"col\"], [1, \"display-6\"], [1, \"col-10\"]],\n    template: function DateAdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"date\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"div\", 5)(10, \"p\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(6, 2, ctx.fechaActual, \"medium\"), \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.dateText);\n      }\n    },\n    dependencies: [i1.DatePipe],\n    styles: [\".cont-date[_ngcontent-%COMP%] {\\n    background-color: whitesmoke;\\n    height: 100%;\\n    padding: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXRlLWFkbWluL2RhdGUtYWRtaW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDRCQUE0QjtJQUM1QixZQUFZO0lBQ1osYUFBYTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250LWRhdGUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["DateAdminComponent","constructor","fechaActual","Date","fechaActualización","tiempoRestanteAct","dateText","calcularDiasRestantes","tiempoRestante","getTime","dias","Math","floor","horas","minutos","_","_2","selectors","decls","vars","consts","template","DateAdminComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind2","ɵɵtextInterpolate"],"sources":["C:\\Users\\USUARIO\\Escritorio\\UCU\\BASES DE DATOS 1\\ULTIMA VERSION OBLIGATORIO DEFINITIVA\\Obligatorio-BDD\\proyecto-angular\\src\\app\\components\\date-admin\\date-admin.component.ts","C:\\Users\\USUARIO\\Escritorio\\UCU\\BASES DE DATOS 1\\ULTIMA VERSION OBLIGATORIO DEFINITIVA\\Obligatorio-BDD\\proyecto-angular\\src\\app\\components\\date-admin\\date-admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-date-admin',\r\n  templateUrl: './date-admin.component.html',\r\n  styleUrls: ['./date-admin.component.css']\r\n})\r\nexport class DateAdminComponent {\r\n  fechaActual: Date = new Date();\r\n  fechaActualización: Date = new Date('2023-11-18T23:59:59'); //esta fecha se va a obtener desde la bd\r\n  tiempoRestanteAct: any = {};\r\n  dateText = '';\r\n\r\n  constructor() {\r\n    this.calcularDiasRestantes();\r\n    this\r\n  }\r\n\r\n  calcularDiasRestantes() {\r\n    const fechaActual = new Date();\r\n    \r\n    const tiempoRestante = this.fechaActualización.getTime() - fechaActual.getTime();\r\n    this.tiempoRestanteAct.dias = Math.floor(tiempoRestante / (1000 * 60 * 60 * 24));\r\n    this.tiempoRestanteAct.horas = Math.floor((tiempoRestante % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    this.tiempoRestanteAct.minutos = Math.floor((tiempoRestante % (1000 * 60 * 60)) / (1000 * 60));\r\n    if (this.tiempoRestanteAct.dias < 0) {\r\n      this.dateText += 'La fecha de actualización ha vencido';\r\n    } else {\r\n      this.dateText += 'Faltan: ' + this.tiempoRestanteAct.dias + 'días,' + this.tiempoRestanteAct.horas + ' horas y ' + this.tiempoRestanteAct.minutos + ' minutos para que el periodo de actualización finalice'\r\n    }\r\n  }\r\n}","<div class=\"fondo\">\r\n    <div class=\"container cont-date rounded shadow-sm\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <h1 class=\"display-6\">{{ fechaActual | date:'medium' }} </h1>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row\">\r\n            <div class=\"col-10\">\r\n                <p>{{dateText}}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":";;AAOA,OAAM,MAAOA,kBAAkB;EAM7BC,YAAA;IALA,KAAAC,WAAW,GAAS,IAAIC,IAAI,EAAE;IAC9B,KAAAC,kBAAkB,GAAS,IAAID,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC5D,KAAAE,iBAAiB,GAAQ,EAAE;IAC3B,KAAAC,QAAQ,GAAG,EAAE;IAGX,IAAI,CAACC,qBAAqB,EAAE;IAC5B,IAAI;EACN;EAEAA,qBAAqBA,CAAA;IACnB,MAAML,WAAW,GAAG,IAAIC,IAAI,EAAE;IAE9B,MAAMK,cAAc,GAAG,IAAI,CAACJ,kBAAkB,CAACK,OAAO,EAAE,GAAGP,WAAW,CAACO,OAAO,EAAE;IAChF,IAAI,CAACJ,iBAAiB,CAACK,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,cAAc,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAChF,IAAI,CAACH,iBAAiB,CAACQ,KAAK,GAAGF,IAAI,CAACC,KAAK,CAAEJ,cAAc,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACtG,IAAI,CAACH,iBAAiB,CAACS,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEJ,cAAc,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;IAC9F,IAAI,IAAI,CAACH,iBAAiB,CAACK,IAAI,GAAG,CAAC,EAAE;MACnC,IAAI,CAACJ,QAAQ,IAAI,sCAAsC;KACxD,MAAM;MACL,IAAI,CAACA,QAAQ,IAAI,UAAU,GAAG,IAAI,CAACD,iBAAiB,CAACK,IAAI,GAAG,OAAO,GAAG,IAAI,CAACL,iBAAiB,CAACQ,KAAK,GAAG,WAAW,GAAG,IAAI,CAACR,iBAAiB,CAACS,OAAO,GAAG,wDAAwD;;EAEhN;EAAC,QAAAC,CAAA,G;qBAvBUf,kBAAkB;EAAA;EAAA,QAAAgB,EAAA,G;UAAlBhB,kBAAkB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP/BE,EAAA,CAAAC,cAAA,aAAmB;QAImBD,EAAA,CAAAE,MAAA,GAAkC;;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGrEH,EAAA,CAAAI,SAAA,SAAI;QACJJ,EAAA,CAAAC,cAAA,aAAiB;QAEND,EAAA,CAAAE,MAAA,IAAY;QAAAF,EAAA,CAAAG,YAAA,EAAI;;;QANGH,EAAA,CAAAK,SAAA,GAAkC;QAAlCL,EAAA,CAAAM,kBAAA,KAAAN,EAAA,CAAAO,WAAA,OAAAR,GAAA,CAAAtB,WAAA,iBAAkC;QAMrDuB,EAAA,CAAAK,SAAA,GAAY;QAAZL,EAAA,CAAAQ,iBAAA,CAAAT,GAAA,CAAAlB,QAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}