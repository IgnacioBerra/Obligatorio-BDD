{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let AgregarFechaComponent = /*#__PURE__*/(() => {\n  class AgregarFechaComponent {\n    constructor() {\n      // fechaDesde: Date = new Date();\n      // fechaHasta: Date = new Date();\n      // constructor(private toastr: ToastrService, private router: Router, private periodoService: PeriodoActualizacionService) {\n      // }\n      // agregarFecha() {\n      //   console.log(typeof this.fechaDesde);\n      //   if (this.fechaDesde && this.fechaHasta) {\n      //     console.log(this.fechaDesde);\n      //     console.log(this.fechaHasta);\n      //     //cambiando formato fecha\n      //     const fechaDesdeDate: Date = new Date(this.fechaDesde);\n      //     const fechaHastaDate: Date = new Date(this.fechaHasta);\n      //     const añoDesde: number = fechaDesdeDate.getFullYear(); \n      //     const mesDesde: number = fechaDesdeDate.getMonth() + 1;\n      //     const diaDesde = fechaDesdeDate.getDate();\n      //     const añoHasta: number = fechaHastaDate.getFullYear();\n      //     const mesHasta: number = fechaHastaDate.getMonth() + 1;\n      //     const diaHasta = fechaHastaDate.getDate();\n      //     let semestre: number;\n      //     if (\n      //       (mesDesde >= 1 && mesDesde <= 7 && añoDesde === añoHasta && mesHasta >= 1 && mesHasta <= 7) \n      //     ) {\n      //       semestre = 1;\n      //     } else if (\n      //       (mesDesde >= 8 && mesDesde <= 12 && añoDesde === añoHasta && mesHasta >= 8 && mesHasta <= 12)\n      //     ) {\n      //       semestre = 2;\n      //     } else {\n      //       semestre = 0;\n      //     }\n      //     const fechaFormateadaInicio = `${añoDesde}-${mesDesde}-${diaDesde}`; // Formato 'YYYY-MM-DD'\n      //     const fechaFormateadaFin = `${añoHasta}-${mesHasta}-${diaHasta}`; // Formato 'YYYY-MM-DD'\n      //     let periodoActualizacion: PeriodosActualizacion ={\n      //       año: añoDesde,\n      //       semestre: semestre,\n      //       fechaInicio: fechaFormateadaInicio,\n      //       fechaFin: fechaFormateadaFin\n      //     }\n      //     console.log(fechaFormateadaFin);\n      //     this.periodoService.addFecha(periodoActualizacion).subscribe(\n      //       response => {\n      //         console.log(response);\n      //       },\n      //       error => {\n      //         console.log(error);\n      //         console.log(error.error)\n      //       }\n      //     );\n      //   } else {\n      //     console.log('Fechas inválidas');\n      //   }\n      // }\n      this.fechasPeriodosActualizacion = new FormGroup({\n        fechaDesde: new FormControl('', Validators.required),\n        fechaHasta: new FormControl('', Validators.required)\n      });\n    }\n    agregarFecha() {\n      const fechaDesdeControl = this.fechasPeriodosActualizacion.get('fechaDesde');\n      const fechaHastaControl = this.fechasPeriodosActualizacion.get('fechaHasta');\n      if (fechaDesdeControl && fechaHastaControl && fechaDesdeControl.value && fechaHastaControl.value) {\n        const fechaDesdeValue = fechaDesdeControl.value;\n        const fechaHastaValue = fechaHastaControl.value;\n        const fechaDesdeParts = fechaDesdeValue.split('-').map(Number);\n        const fechaHastaParts = fechaHastaValue.split('-').map(Number);\n        // Aquí, usamos el constructor new Date(YYYY, MM - 1, DD) para crear la fecha\n        const fechaDesde = new Date(fechaDesdeParts[0], fechaDesdeParts[1] - 1, fechaDesdeParts[2]);\n        const fechaHasta = new Date(fechaHastaParts[0], fechaHastaParts[1] - 1, fechaHastaParts[2]);\n        //probar ahora con lo comentado de arriba\n      }\n    }\n    static #_ = this.ɵfac = function AgregarFechaComponent_Factory(t) {\n      return new (t || AgregarFechaComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AgregarFechaComponent,\n      selectors: [[\"app-agregar-fecha\"]],\n      decls: 22,\n      vars: 1,\n      consts: [[1, \"fondo\"], [1, \"container\"], [1, \"row\", \"justify-content-md-center\"], [1, \"col-6\", \"text-center\"], [\"src\", \"../../assets/ucu.png\", \"alt\", \"\", \"srcset\", \"\"], [1, \"display-5\"], [1, \"col-6\", \"content-form\", \"rounded\", \"shadow\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"formControlName\", \"fechaDesde\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"exampleInputPassword1\", \"formControlName\", \"fechaHasta\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-guardar\", 3, \"click\"]],\n      template: function AgregarFechaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵelement(4, \"img\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"h1\", 5);\n          i0.ɵɵtext(8, \"Agregar fecha\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 6)(11, \"form\", 7)(12, \"div\", 8)(13, \"label\", 9);\n          i0.ɵɵtext(14, \"Fecha desde: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 8)(17, \"label\", 11);\n          i0.ɵɵtext(18, \"Fecha hasta:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function AgregarFechaComponent_Template_button_click_20_listener() {\n            return ctx.agregarFecha();\n          });\n          i0.ɵɵtext(21, \"Guardar\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"formGroup\", ctx.fechasPeriodosActualizacion);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup],\n      styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Bungee&family=Calistoga&family=Francois+One&family=Patua+One&display=swap\\\";.fondo[_ngcontent-%COMP%]{background-color:#0a3163;background-size:cover;width:100%;height:100%;position:absolute;top:0;left:0}.container[_ngcontent-%COMP%]{margin-top:120px}.content-form[_ngcontent-%COMP%]{background-color:#ffffffbd;padding:15px}h1[_ngcontent-%COMP%]{font-family:Cabin,sans-serif;color:#fff}.btn-guardar[_ngcontent-%COMP%]{background-color:#0a3163;width:100%;color:#fff}.btn-guardar[_ngcontent-%COMP%]:hover{background-color:#07254b}\"]\n    });\n  }\n  return AgregarFechaComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}