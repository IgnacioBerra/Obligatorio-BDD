{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport class DateAdminComponent {\n  constructor() {\n    this.fechaActual = new Date();\n    this.fechaActualización = new Date('2023-11-18T23:59:59'); //esta fecha se va a obtener desde la bd\n    this.tiempoRestanteAct = {};\n    this.calcularDiasRestantes();\n  }\n  calcularDiasRestantes() {\n    const fechaActual = new Date();\n    const tiempoRestante = this.fechaActualización.getTime() - fechaActual.getTime();\n    this.tiempoRestanteAct.dias = Math.floor(tiempoRestante / (1000 * 60 * 60 * 24));\n    this.tiempoRestanteAct.horas = Math.floor(tiempoRestante % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    this.tiempoRestanteAct.minutos = Math.floor(tiempoRestante % (1000 * 60 * 60) / (1000 * 60));\n  }\n  static #_ = this.ɵfac = function DateAdminComponent_Factory(t) {\n    return new (t || DateAdminComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DateAdminComponent,\n    selectors: [[\"app-date-admin\"]],\n    decls: 13,\n    vars: 7,\n    consts: [[1, \"fondo\"], [1, \"container\", \"cont-date\", \"rounded\", \"shadow-sm\"], [1, \"row\"], [1, \"col\"], [1, \"display-6\"], [1, \"col-10\"]],\n    template: function DateAdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"date\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"div\", 5);\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(6, 4, ctx.fechaActual, \"medium\"), \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate3(\"faltan: \", ctx.tiempoRestanteAct.dias, \" d\\u00EDas, \", ctx.tiempoRestanteAct.horas, \" horas y \", ctx.tiempoRestanteAct.minutos, \" minutos para que el periodo de actualizaci\\u00F3n finalice\");\n      }\n    },\n    dependencies: [i1.DatePipe],\n    styles: [\".cont-date[_ngcontent-%COMP%] {\\n    background-color: whitesmoke;\\n    height: 100%;\\n    padding: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGF0ZS1hZG1pbi9kYXRlLWFkbWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw0QkFBNEI7SUFDNUIsWUFBWTtJQUNaLGFBQWE7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udC1kYXRlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["DateAdminComponent","constructor","fechaActual","Date","fechaActualización","tiempoRestanteAct","calcularDiasRestantes","tiempoRestante","getTime","dias","Math","floor","horas","minutos","_","_2","selectors","decls","vars","consts","template","DateAdminComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind2","ɵɵtextInterpolate3"],"sources":["C:\\Users\\sofia\\OneDrive\\Escritorio\\FACULTAD\\Segundo año\\segundo semestre\\base de datos\\obl\\Obligatorio-BDD\\proyecto-angular\\src\\app\\date-admin\\date-admin.component.ts","C:\\Users\\sofia\\OneDrive\\Escritorio\\FACULTAD\\Segundo año\\segundo semestre\\base de datos\\obl\\Obligatorio-BDD\\proyecto-angular\\src\\app\\date-admin\\date-admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-date-admin',\n  templateUrl: './date-admin.component.html',\n  styleUrls: ['./date-admin.component.css']\n})\nexport class DateAdminComponent {\n  fechaActual: Date = new Date();\n  fechaActualización: Date = new Date('2023-11-18T23:59:59'); //esta fecha se va a obtener desde la bd\n  tiempoRestanteAct: any = {};\n\n  constructor() {\n    this.calcularDiasRestantes();\n  }\n\n  calcularDiasRestantes() {\n    const fechaActual = new Date();\n    const tiempoRestante = this.fechaActualización.getTime() - fechaActual.getTime();\n\n    this.tiempoRestanteAct.dias = Math.floor(tiempoRestante / (1000 * 60 * 60 * 24));\n    this.tiempoRestanteAct.horas = Math.floor((tiempoRestante % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    this.tiempoRestanteAct.minutos = Math.floor((tiempoRestante % (1000 * 60 * 60)) / (1000 * 60));\n  }\n}\n","<div class=\"fondo\">\n    <div class=\"container cont-date rounded shadow-sm\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <h1 class=\"display-6\">{{ fechaActual | date:'medium' }} </h1>\n            </div>\n        </div>\n        <hr>\n        <div class=\"row\">\n            <div class=\"col-10\">\n                <br>\n                <p >faltan: {{ tiempoRestanteAct.dias }} días, {{ tiempoRestanteAct.horas }} horas y {{ tiempoRestanteAct.minutos }} minutos para que el periodo de actualización finalice</p>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":";;AAOA,OAAM,MAAOA,kBAAkB;EAK7BC,YAAA;IAJA,KAAAC,WAAW,GAAS,IAAIC,IAAI,EAAE;IAC9B,KAAAC,kBAAkB,GAAS,IAAID,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC5D,KAAAE,iBAAiB,GAAQ,EAAE;IAGzB,IAAI,CAACC,qBAAqB,EAAE;EAC9B;EAEAA,qBAAqBA,CAAA;IACnB,MAAMJ,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC9B,MAAMI,cAAc,GAAG,IAAI,CAACH,kBAAkB,CAACI,OAAO,EAAE,GAAGN,WAAW,CAACM,OAAO,EAAE;IAEhF,IAAI,CAACH,iBAAiB,CAACI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,cAAc,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAChF,IAAI,CAACF,iBAAiB,CAACO,KAAK,GAAGF,IAAI,CAACC,KAAK,CAAEJ,cAAc,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACtG,IAAI,CAACF,iBAAiB,CAACQ,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEJ,cAAc,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;EAChG;EAAC,QAAAO,CAAA,G;qBAhBUd,kBAAkB;EAAA;EAAA,QAAAe,EAAA,G;UAAlBf,kBAAkB;IAAAgB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP/BE,EAAA,CAAAC,cAAA,aAAmB;QAImBD,EAAA,CAAAE,MAAA,GAAkC;;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGrEH,EAAA,CAAAI,SAAA,SAAI;QACJJ,EAAA,CAAAC,cAAA,aAAiB;QAETD,EAAA,CAAAI,SAAA,UAAI;QACJJ,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,IAAsK;QAAAF,EAAA,CAAAG,YAAA,EAAI;;;QAPxJH,EAAA,CAAAK,SAAA,GAAkC;QAAlCL,EAAA,CAAAM,kBAAA,KAAAN,EAAA,CAAAO,WAAA,OAAAR,GAAA,CAAArB,WAAA,iBAAkC;QAOpDsB,EAAA,CAAAK,SAAA,GAAsK;QAAtKL,EAAA,CAAAQ,kBAAA,aAAAT,GAAA,CAAAlB,iBAAA,CAAAI,IAAA,kBAAAc,GAAA,CAAAlB,iBAAA,CAAAO,KAAA,eAAAW,GAAA,CAAAlB,iBAAA,CAAAQ,OAAA,gEAAsK"},"metadata":{},"sourceType":"module","externalDependencies":[]}