{"ast":null,"code":"export class RegisterFormComponent {\n  constructor(route, router, funcService) {\n    this.route = route;\n    this.router = router;\n    this.funcService = funcService;\n    this.carnetsalud = false;\n    this.nombre = \"\";\n    this.apellido = \"\";\n    this.direccion = \"\";\n    this.email = \"\";\n    this.password = \"\";\n    this.telefono = null;\n    this.ci = null;\n    this.fecha_nacimiento = null;\n  }\n  onChange(event) {\n    this.carnetsalud = event.target.checked;\n    console.log(this.carnetsalud);\n  }\n  signIn() {\n    if (this.nombre && this.apellido && this.fecha_nacimiento && this.ci && this.telefono) {\n      let funcionario = {\n        CI: this.ci,\n        nombre: this.nombre,\n        apellido: this.apellido,\n        fechaNacimiento: this.fecha_nacimiento,\n        direccion: this.direccion,\n        telefono: this.telefono,\n        email: this.email,\n        password: this.password\n      };\n      this.funcService.addFuncionario(funcionario).subscribe(response => {\n        console.log('Solicitud POST exitosa:', {\n          response\n        });\n        if (this.carnetsalud) {\n          this.router.navigate(['/carneSaludForm'], {\n            relativeTo: this.route\n          });\n        } else {\n          this.router.navigate(['/agendaForm'], {\n            relativeTo: this.route\n          }); //lo manda a agendarse en la clinica ucu\n        }\n      }, error => {\n        console.error('Error en la solicitud POST:', error);\n        console.error('body de la respuesta:', error.error);\n      });\n    }\n  }\n}","map":{"version":3,"names":["RegisterFormComponent","constructor","route","router","funcService","carnetsalud","nombre","apellido","direccion","email","password","telefono","ci","fecha_nacimiento","onChange","event","target","checked","console","log","signIn","funcionario","CI","fechaNacimiento","addFuncionario","subscribe","response","navigate","relativeTo","error"],"sources":["C:\\Users\\USUARIO\\Escritorio\\UCU\\BASES DE DATOS 1\\Nueva carpeta\\por ultima vez obligatorio-BDD\\Obligatorio-BDD\\proyecto-angular\\src\\app\\components\\register-form\\register-form.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Funcionarios } from '../../interfaces/funcionario';\r\nimport { FuncionarioService } from '../../services/funcionario.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register-form',\r\n  templateUrl: './register-form.component.html',\r\n  styleUrls: ['./register-form.component.css']\r\n})\r\n\r\n@Injectable())\r\nexport class RegisterFormComponent {\r\n  carnetsalud: boolean = false;\r\n  nombre = \"\";\r\n  apellido = \"\";\r\n  direccion =  \"\";\r\n  email = \"\";\r\n  password = \"\";\r\n  telefono: number | null = null;\r\n  ci: number | null = null;\r\n  fecha_nacimiento: Date | null = null;\r\n\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private funcService: FuncionarioService) { }\r\n\r\n  onChange(event: any) {\r\n    this.carnetsalud = event.target.checked;\r\n    console.log(this.carnetsalud);\r\n  }\r\n\r\n  signIn() {\r\n    if(this.nombre && this.apellido && this.fecha_nacimiento && this.ci && this.telefono){\r\n      let funcionario: Funcionarios = {\r\n        CI: this.ci,\r\n        nombre: this.nombre,\r\n        apellido: this.apellido,\r\n        fechaNacimiento: this.fecha_nacimiento,\r\n        direccion: this.direccion,\r\n        telefono: this.telefono,\r\n        email: this.email,\r\n        password: this.password\r\n      }\r\n      this.funcService.addFuncionario(funcionario).subscribe(\r\n        response => {\r\n          console.log('Solicitud POST exitosa:', {response});\r\n          if (this.carnetsalud) {\r\n            this.router.navigate(['/carneSaludForm'], { relativeTo: this.route });\r\n          } else {\r\n            this.router.navigate(['/agendaForm'], { relativeTo: this.route }); //lo manda a agendarse en la clinica ucu\r\n          }\r\n        },\r\n        error => {\r\n          console.error('Error en la solicitud POST:', error);\r\n          console.error('body de la respuesta:', error.error);\r\n        }\r\n      );    \r\n    }\r\n  }\r\n\r\n}\r\n"],"mappings":"AAaA,OAAM,MAAOA,qBAAqB;EAahCC,YACUC,KAAqB,EACrBC,MAAc,EACdC,WAA+B;IAF/B,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IAfrB,KAAAC,WAAW,GAAY,KAAK;IAC5B,KAAAC,MAAM,GAAG,EAAE;IACX,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,SAAS,GAAI,EAAE;IACf,KAAAC,KAAK,GAAG,EAAE;IACV,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,QAAQ,GAAkB,IAAI;IAC9B,KAAAC,EAAE,GAAkB,IAAI;IACxB,KAAAC,gBAAgB,GAAgB,IAAI;EAOS;EAE7CC,QAAQA,CAACC,KAAU;IACjB,IAAI,CAACV,WAAW,GAAGU,KAAK,CAACC,MAAM,CAACC,OAAO;IACvCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,WAAW,CAAC;EAC/B;EAEAe,MAAMA,CAAA;IACJ,IAAG,IAAI,CAACd,MAAM,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACM,gBAAgB,IAAI,IAAI,CAACD,EAAE,IAAI,IAAI,CAACD,QAAQ,EAAC;MACnF,IAAIU,WAAW,GAAiB;QAC9BC,EAAE,EAAE,IAAI,CAACV,EAAE;QACXN,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBgB,eAAe,EAAE,IAAI,CAACV,gBAAgB;QACtCL,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBG,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBF,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;OAChB;MACD,IAAI,CAACN,WAAW,CAACoB,cAAc,CAACH,WAAW,CAAC,CAACI,SAAS,CACpDC,QAAQ,IAAG;QACTR,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;UAACO;QAAQ,CAAC,CAAC;QAClD,IAAI,IAAI,CAACrB,WAAW,EAAE;UACpB,IAAI,CAACF,MAAM,CAACwB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE;YAAEC,UAAU,EAAE,IAAI,CAAC1B;UAAK,CAAE,CAAC;SACtE,MAAM;UACL,IAAI,CAACC,MAAM,CAACwB,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE;YAAEC,UAAU,EAAE,IAAI,CAAC1B;UAAK,CAAE,CAAC,CAAC,CAAC;;MAEvE,CAAC,EACD2B,KAAK,IAAG;QACNX,OAAO,CAACW,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDX,OAAO,CAACW,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACA,KAAK,CAAC;MACrD,CAAC,CACF;;EAEL"},"metadata":{},"sourceType":"module","externalDependencies":[]}