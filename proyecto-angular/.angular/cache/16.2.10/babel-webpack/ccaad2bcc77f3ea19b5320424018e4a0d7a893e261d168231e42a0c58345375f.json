{"ast":null,"code":"import { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(_http) {\n    this._http = _http;\n    this.loginUrl = `https://${environment.apiUrl}:7214/api/Login/`;\n  }\n  logeo(user) {\n    //const url = `${this.loginUrl}Logeo?logId=${user.logId}&password=${user.password}`\n    return this._http.post(`${this.loginUrl}Logeo`, {\n      \"logId\": user.logId,\n      \"password\": user.password\n    });\n  }\n  addUser(password) {\n    return this._http.post(`${this.loginUrl}AddUser`, password);\n  }\n  deleteUser(logId) {\n    return this._http.delete(`${this.loginUrl}DeleteUser?logId=${logId}`); //eliminando desde..?\n  }\n\n  changePassword(logId, oldPassword, newPassword) {\n    return this._http.put(`${this.loginUrl}ChangePassword`, {\n      logId,\n      oldPassword,\n      newPassword\n    });\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","LoginService","constructor","_http","loginUrl","apiUrl","logeo","user","post","logId","password","addUser","deleteUser","delete","changePassword","oldPassword","newPassword","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ignacio\\Desktop\\copiar\\Obligatorio-BDD\\proyecto-angular\\src\\app\\services\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Logins } from '../interfaces/logins';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environment/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  loginUrl = `https://${environment.apiUrl}:7214/api/Login/`;\r\n\r\n  constructor(private _http : HttpClient) { }\r\n\r\n  logeo(user: Logins){\r\n       //const url = `${this.loginUrl}Logeo?logId=${user.logId}&password=${user.password}`\r\n      return this._http.post<string>(`${this.loginUrl}Logeo`, {\"logId\":user.logId,\"password\":user.password});\r\n  }\r\n\r\n  addUser(password: string): Observable<any> {\r\n    return this._http.post<any>(`${this.loginUrl}AddUser`, password);\r\n  }\r\n\r\n  deleteUser(logId: number): Observable<any> {\r\n    return this._http.delete<any>(`${this.loginUrl}DeleteUser?logId=${logId}`); //eliminando desde..?\r\n  }\r\n\r\n  changePassword(logId: number, oldPassword: number, newPassword: number): Observable<any> {\r\n    return this._http.put<any>(`${this.loginUrl}ChangePassword`, { logId, oldPassword, newPassword });\r\n  }\r\n\r\n}"],"mappings":"AAIA,SAASA,WAAW,QAAQ,6BAA6B;;;AAKzD,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,KAAkB;IAAlB,KAAAA,KAAK,GAALA,KAAK;IAFzB,KAAAC,QAAQ,GAAG,WAAWJ,WAAW,CAACK,MAAM,kBAAkB;EAEhB;EAE1CC,KAAKA,CAACC,IAAY;IACb;IACD,OAAO,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAS,GAAG,IAAI,CAACJ,QAAQ,OAAO,EAAE;MAAC,OAAO,EAACG,IAAI,CAACE,KAAK;MAAC,UAAU,EAACF,IAAI,CAACG;IAAQ,CAAC,CAAC;EAC1G;EAEAC,OAAOA,CAACD,QAAgB;IACtB,OAAO,IAAI,CAACP,KAAK,CAACK,IAAI,CAAM,GAAG,IAAI,CAACJ,QAAQ,SAAS,EAAEM,QAAQ,CAAC;EAClE;EAEAE,UAAUA,CAACH,KAAa;IACtB,OAAO,IAAI,CAACN,KAAK,CAACU,MAAM,CAAM,GAAG,IAAI,CAACT,QAAQ,oBAAoBK,KAAK,EAAE,CAAC,CAAC,CAAC;EAC9E;;EAEAK,cAAcA,CAACL,KAAa,EAAEM,WAAmB,EAAEC,WAAmB;IACpE,OAAO,IAAI,CAACb,KAAK,CAACc,GAAG,CAAM,GAAG,IAAI,CAACb,QAAQ,gBAAgB,EAAE;MAAEK,KAAK;MAAEM,WAAW;MAAEC;IAAW,CAAE,CAAC;EACnG;EAAC,QAAAE,CAAA,G;qBArBUjB,YAAY,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZtB,YAAY;IAAAuB,OAAA,EAAZvB,YAAY,CAAAwB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}