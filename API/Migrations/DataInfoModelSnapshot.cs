// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataInfo))]
    partial class DataInfoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Clases.ActualizacionFuncionario", b =>
                {
                    b.Property<int>("CI")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CI"));

                    b.Property<bool>("completado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha_actualizacion")
                        .HasColumnType("datetime2");

                    b.HasKey("CI");

                    b.ToTable("actualizacion_funcionario", (string)null);
                });

            modelBuilder.Entity("API.Clases.Agenda", b =>
                {
                    b.Property<int>("Nro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Nro"));

                    b.Property<int>("CI")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fch_Agenda")
                        .HasColumnType("datetime2");

                    b.HasKey("Nro");

                    b.HasIndex("CI");

                    b.ToTable("agenda", (string)null);
                });

            modelBuilder.Entity("API.Clases.CarnetSalud", b =>
                {
                    b.Property<int>("CI")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fch_Emision")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comprobante")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Fch_Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("CI", "Fch_Emision");

                    b.ToTable("carnet_salud", (string)null);
                });

            modelBuilder.Entity("API.Clases.Funcionarios", b =>
                {
                    b.Property<int>("CI")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CI"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("Fch_Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("LogId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("CI");

                    b.HasIndex("LogId");

                    b.ToTable("funcionarios", (string)null);
                });

            modelBuilder.Entity("API.Clases.Logins", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LogId");

                    b.ToTable("logins", (string)null);
                });

            modelBuilder.Entity("API.Clases.PeriodosActualizacion", b =>
                {
                    b.Property<DateTime>("Fch_Inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fch_Fin")
                        .HasColumnType("datetime2");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<int>("Semestre")
                        .HasColumnType("int");

                    b.HasKey("Fch_Inicio", "Fch_Fin");

                    b.ToTable("periodos_actualizacion", (string)null);
                });

            modelBuilder.Entity("API.Clases.Agenda", b =>
                {
                    b.HasOne("API.Clases.Funcionarios", "Funcionarios")
                        .WithMany()
                        .HasForeignKey("CI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("API.Clases.Funcionarios", b =>
                {
                    b.HasOne("API.Clases.Logins", "Logins")
                        .WithMany()
                        .HasForeignKey("LogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Logins");
                });
#pragma warning restore 612, 618
        }
    }
}
